{"version":3,"file":"static/js/866.04bce254.chunk.js","mappings":"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","sources":["components/DarkModeToggle.jsx","components/HamburgerMenu.jsx","components/useDarkMode.jsx","components/Navbar.jsx"],"sourcesContent":["import React from \"react\";\nimport { FormGroup, FormControlLabel } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Switch from \"@mui/material/Switch\";\n\n// Material-UI styled switch (as per your given example)\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\n  width: 62,\n  height: 34,\n  padding: 7,\n  '& .MuiSwitch-switchBase': {\n    margin: 1,\n    padding: 0,\n    transform: 'translateX(6px)',\n    '&.Mui-checked': {\n      color: '#fff',\n      transform: 'translateX(22px)',\n      '& .MuiSwitch-thumb:before': {\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n          '#fff',\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n      },\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: '#aab4be',\n        ...theme.applyStyles('dark', {\n          backgroundColor: '#8796A5',\n        }),\n      },\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    backgroundColor: '#001e3c',\n    width: 32,\n    height: 32,\n    '&::before': {\n      content: \"''\",\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n        '#fff',\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n    },\n    ...theme.applyStyles('dark', {\n      backgroundColor: '#003892',\n    }),\n  },\n  '& .MuiSwitch-track': {\n    opacity: 1,\n    backgroundColor: '#aab4be',\n    borderRadius: 20 / 2,\n    ...theme.applyStyles('dark', {\n      backgroundColor: '#8796A5',\n    }),\n  },\n}));\n\nconst DarkModeToggle = ({ darkMode, toggleDarkMode }) => (\n  <FormGroup>\n    <FormControlLabel\n      control={<MaterialUISwitch sx={{ m: 1 }} checked={darkMode} onChange={toggleDarkMode} />}\n    />\n  </FormGroup>\n);\n\nexport default DarkModeToggle;\n","import React from \"react\";\n\nconst HamburgerMenu = ({ isOpen, toggleMenu }) => (\n  <button\n    className=\"text-gray-600 dark:text-gray-300 focus:outline-none md:hidden\"\n    onClick={toggleMenu}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d={isOpen ? \"M6 18L18 6M6 6l12 12\" : \"M4 6h16M4 12h16M4 18h16\"}\n      />\n    </svg>\n  </button>\n);\n\nexport default HamburgerMenu;\n","import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst useDarkMode = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedTheme = Cookies.get(\"theme\");\n    if (savedTheme === \"dark\") {\n      setDarkMode(true);\n      document.documentElement.classList.add(\"dark\");\n    }\n  }, []);\n\n  const toggleDarkMode = (event) => {\n    const newDarkModeState = event.target.checked;\n    setDarkMode(newDarkModeState);\n    document.documentElement.classList.toggle(\"dark\", newDarkModeState);\n    Cookies.set(\"theme\", newDarkModeState ? \"dark\" : \"light\", { expires: 365 });\n  };\n\n  return { darkMode, toggleDarkMode };\n};\n\nexport default useDarkMode;\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport DarkModeToggle from \"./DarkModeToggle\";\nimport HamburgerMenu from \"./HamburgerMenu\";\nimport useDarkMode from \"./useDarkMode\";\n\nconst navLinks = [\"About\", \"Projects\", \"Skills\", \"Contact\"];\n\nconst AnimatedNavLink = ({ link, index, onClick }) => (\n  <motion.a\n    key={link}\n    href={`#${link.toLowerCase()}`}\n    className=\"text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition block\"\n    onClick={onClick}\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    transition={{ duration: 0.5, delay: index * 0.1 }}\n  >\n    {link}\n  </motion.a>\n);\n\nconst Navbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { darkMode, toggleDarkMode } = useDarkMode();\n\n  const toggleMenu = () => setIsOpen(!isOpen);\n  const handleLinkClick = () => setIsOpen(false);\n\n  return (\n    <nav className=\"bg-white dark:bg-gray-800 shadow fixed w-full z-50 transition-colors font-mono\" aria-label=\"Main navigation\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-14\">\n          {/* Logo */}\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"text-xl font-bold text-blue-600 dark:text-blue-400\"\n          >\n            <a href=\"#about\">MyPortfolio</a>\n          </motion.div>\n\n          {/* Desktop Links */}\n          <div className=\"hidden md:flex space-x-6\">\n            {navLinks.map((link, index) => (\n              <AnimatedNavLink key={link} link={link} index={index} />\n            ))}\n          </div>\n\n          {/* Right Section */}\n          <div className=\"flex items-center space-x-4\">\n            <DarkModeToggle darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\n\n            {/* Hamburger */}\n            <div className=\"md:hidden\">\n              <HamburgerMenu\n                isOpen={isOpen}\n                toggleMenu={toggleMenu}\n                ariaLabel=\"Toggle navigation menu\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        {isOpen && (\n          <motion.div\n            className=\"md:hidden bg-white dark:bg-gray-800 shadow-md font-mono absolute w-full left-0 top-14 z-40\"\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <div className=\"space-y-4 py-4 px-6\">\n              {navLinks.map((link, index) => (\n                <AnimatedNavLink key={link} link={link} index={index} onClick={handleLinkClick} />\n              ))}\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":["MaterialUISwitch","styled","Switch","_ref","theme","width","height","padding","margin","transform","color","backgroundImage","concat","encodeURIComponent","_objectSpread","opacity","backgroundColor","applyStyles","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","_ref2","darkMode","toggleDarkMode","_jsx","FormGroup","children","FormControlLabel","control","sx","m","checked","onChange","isOpen","toggleMenu","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","useDarkMode","setDarkMode","useState","useEffect","Cookies","get","document","documentElement","classList","add","event","newDarkModeState","target","toggle","set","expires","navLinks","AnimatedNavLink","link","index","motion","a","href","toLowerCase","initial","animate","transition","duration","delay","Navbar","setIsOpen","handleLinkClick","_jsxs","div","x","map","DarkModeToggle","HamburgerMenu","ariaLabel","y"],"sourceRoot":""}