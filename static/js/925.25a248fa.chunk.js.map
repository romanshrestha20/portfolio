{"version":3,"file":"static/js/925.25a248fa.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from 'motion-dom';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["_defineProperty","e","r","t","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","i","s","includes","propertyIsEnumerable","call","_objectWithoutPropertiesLoose","n","hasOwnProperty","_typeof","Symbol","iterator","constructor","prototype","toPropertyKey","toPrimitive","TypeError","String","Number","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","values","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","concat","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","_objectSpread","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isPrimaryPointer","button","isPrimary","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","focusableElements","isNodeOrChild","parentElement","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","extractEventInfo","point","pageX","pageY","addDomEvent","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","motion"],"sourceRoot":""}