{"version":3,"file":"static/js/269.258ca98b.chunk.js","mappings":"mIAAe,SAASA,EAAaC,GAAkC,IAAjC,MAAEC,EAAK,SAAEC,EAAQ,UAAEC,GAAWH,EAClE,OACEI,EAAAA,EAAAA,MAAA,OAAKD,UAAS,qBAAAE,OAAuBF,GAAYG,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,0DAAyDG,SACpEL,IAEFC,IACCK,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,0DAAyDG,SACnEJ,MAKX,C,gICVA,MA4CA,EA5CqBF,IAWd,IAXe,MACpBQ,EAAK,KACLC,EAAI,MACJC,EAAK,SACLC,EAAQ,YACRC,EAAW,MACXC,EAAK,WACLC,EAAU,KACVC,EAAI,UACJC,GAAY,EAAK,KACjBC,EAAO,GACRjB,EACC,OACEO,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRV,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVQ,WAAS,EACTC,QAAQ,WACRR,YAAaA,EACbS,UAAQ,EACRR,QAASA,EACTC,WAAYA,EACZE,UAAWA,EACXC,KAAMA,EACNK,WAAY,CACVC,gBACEhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAc,CACbC,SAAS,QACTC,MAAOV,EAAY,CAAEW,UAAW,aAAcC,UAAW,OAAU,CAAC,EAAEtB,SAErES,IAGLW,MAAO,CAAEG,MAAO,YAElBC,gBAAiB,CACf3B,UAAW,kCAEb,E,cCvCN,MAMA,EANgB4B,KACdxB,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,mCAAkCG,UAC/CC,EAAAA,EAAAA,KAACyB,EAAAA,EAAgB,CAAC7B,UAAU,gCAAgC8B,KAAM,O,iCCKtE,MAiJA,EAjJoBC,KAClB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CAAE5B,KAAM,GAAI6B,MAAO,GAAIC,QAAS,MAClEC,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,CAAE5B,KAAM,GAAI6B,MAAO,GAAIC,QAAS,MACtEG,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,KACtCO,EAAWC,IAAgBR,EAAAA,EAAAA,WAAS,GAErCS,EAAgBA,CAACrC,EAAMC,KAC3B,OAAQD,GACN,IAAK,OACH,MAAwB,KAAjBC,EAAMqC,OAAgB,oBAAsB,GACrD,IAAK,QACH,MAAO,eAAeC,KAAKtC,GAAS,GAAK,sCAC3C,IAAK,UACH,MAAwB,KAAjBA,EAAMqC,OAAgB,uBAAyB,GACxD,QACE,MAAO,GACX,EAGIE,EAAqBC,IACzB,MAAM,KAAEzC,EAAI,MAAEC,GAAUwC,EAAEC,OAE1Bf,GAAagB,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE,CAAC3C,GAAOC,MAC1C+B,GAAeW,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE,CAAC3C,GAAOqC,EAAcrC,EAAMC,MAAU,EA2C5E,OACEH,EAAAA,EAAAA,KAAC+C,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,YAAa,CAAEF,QAAS,EAAGC,EAAG,GAC9BE,WAAY,CAAEC,SAAU,IACxB1D,UAAU,sEAAqEG,UAE/EF,EAAAA,EAAAA,MAAA,QAAM0D,SA/CWC,UACnBb,EAAEc,iBAEF,MAAMC,EAAS,CACbxD,KAAMqC,EAAc,OAAQX,EAAS1B,MACrC6B,MAAOQ,EAAc,QAASX,EAASG,OACvCC,QAASO,EAAc,UAAWX,EAASI,UAG7CE,EAAcwB,GAEVC,OAAOC,OAAOF,GAAQG,MAAMC,GAAgB,KAARA,IACtC1B,EAAc,iCAIhBE,GAAa,GACbF,EAAc,cAEd2B,EAAAA,GAAAA,KAEIC,kBACAA,mBACApC,EACAoC,qBAEDC,MAAK,KACJ7B,EAAc,4BACdP,EAAY,CAAE3B,KAAM,GAAI6B,MAAO,GAAIC,QAAS,KAC5CE,EAAc,CAAEhC,KAAM,GAAI6B,MAAO,GAAIC,QAAS,IAAK,IAEpDkC,OAAO5D,IACN6D,QAAQ7D,MAAM,UAAWA,GACzB8B,EAAc,wBAAwB,IAEvCgC,SAAQ,KACP9B,GAAa,EAAM,IACnB,EAU2BvC,SAAA,EAC3BC,EAAAA,EAAAA,KAACqE,EAAAA,EAAG,CAACC,GAAI,EAAEvE,UACTC,EAAAA,EAAAA,KAACuE,EAAY,CACXtE,MAAM,OACNC,KAAK,OACLC,MAAOyB,EAAS1B,KAChBE,SAAUsC,EACVrC,YAAY,YACZC,MAAO2B,EAAW/B,KAClBK,WAAY0B,EAAW/B,KACvBM,MAAMR,EAAAA,EAAAA,KAACwE,EAAAA,EAAU,CAAC5E,UAAU,0CAIhCI,EAAAA,EAAAA,KAACqE,EAAAA,EAAG,CAACC,GAAI,EAAEvE,UACTC,EAAAA,EAAAA,KAACuE,EAAY,CACXtE,MAAM,QACNC,KAAK,QACLC,MAAOyB,EAASG,MAChB3B,SAAUsC,EACVrC,YAAY,aACZC,MAAO2B,EAAWF,MAClBxB,WAAY0B,EAAWF,MACvBvB,MAAMR,EAAAA,EAAAA,KAACyE,EAAAA,EAAQ,CAAC7E,UAAU,0CAI9BI,EAAAA,EAAAA,KAACqE,EAAAA,EAAG,CAACC,GAAI,EAAEvE,UACTC,EAAAA,EAAAA,KAACuE,EAAY,CACXtE,MAAM,UACNC,KAAK,UACLC,MAAOyB,EAASI,QAChB5B,SAAUsC,EACVrC,YAAY,eACZC,MAAO2B,EAAWD,QAClBzB,WAAY0B,EAAWD,QACvBxB,MAAMR,EAAAA,EAAAA,KAAC0E,EAAAA,EAAQ,CAAC9E,UAAU,qCAC1Ba,WAAS,EACTC,KAAM,MAITyB,IACCnC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAO4B,EAAC,CACP1B,QAAS,CAAEC,QAAS,GACpB0B,QAAS,CAAE1B,QAAS,GACpBG,WAAY,CAAEC,SAAU,IACxB1D,UAAS,oBAAAE,OACPqC,EAAW0C,SAAS,WAAa,iBAAmB,gBACnD9E,SAEFoC,KAILnC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,2BAA0BG,UACvCC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAO+B,OAAM,CACZC,KAAK,SACLnF,UAAU,6HACVoF,SAAU3C,EACVY,QAAS,CAAEC,QAAS,GACpB0B,QAAS,CAAE1B,QAAS,GACpBG,WAAY,CAAEC,SAAU,IAAMvD,SAE7BsC,GAAYrC,EAAAA,EAAAA,KAACwB,EAAO,IAAM,uBAItB,E,cCnJjB,MA6BA,EA7BgByD,KAEZjF,EAAAA,EAAAA,KAAA,WACEkF,GAAG,UACHtF,UAAU,6EAA4EG,UAEtFF,EAAAA,EAAAA,MAAA,OAAKD,UAAU,yCAAwCG,SAAA,EACrDC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,YAAa,CAAEF,QAAS,EAAGC,EAAG,GAC9BE,WAAY,CAAEC,SAAU,IAAMvD,UAE9BC,EAAAA,EAAAA,KAACR,EAAAA,EAAa,CACZE,MAAM,eACNC,UACEE,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAApF,SAAA,CAAE,8CAC0CC,EAAAA,EAAAA,KAAA,SAAM,mCAMxDA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC2B,EAAW,Q","sources":["components/common/SectionHeader.jsx","components/contact/ContactInput.jsx","components/common/Spinner.jsx","components/contact/ContactForm.jsx","components/contact/Contact.jsx"],"sourcesContent":["export default function SectionHeader({ title, subtitle, className }) {\n  return (\n    <div className={`text-center mb-12 ${className}`}>\n      <h2 className=\"text-4xl font-extrabold text-primary dark:text-blue-500\">\n        {title}\n      </h2>\n      {subtitle && (\n        <p className=\"font-mono text-lg text-gray-600 dark:text-gray-300 mt-2\">\n          {subtitle}\n        </p>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@mui/material\";\n\nconst ContactInput = ({\n  label,\n  name,\n  value,\n  onChange,\n  placeholder,\n  error,\n  helperText,\n  icon,\n  multiline = false,\n  rows = 1,\n}) => {\n  return (\n    <TextField\n      label={label}\n      name={name}\n      value={value}\n      onChange={onChange}\n      fullWidth\n      variant=\"outlined\"\n      placeholder={placeholder}\n      required\n      error={!!error}\n      helperText={helperText}\n      multiline={multiline}\n      rows={rows}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment\n            position=\"start\"\n            style={multiline ? { alignSelf: \"flex-start\", marginTop: \"2px\" } : {}}\n          >\n            {icon}\n          </InputAdornment>\n        ),\n        style: { color: \"inherit\" },\n      }}\n      InputLabelProps={{\n        className: \"text-gray-900 dark:text-white\",\n      }}\n    />\n  );\n};\n\nexport default ContactInput;\n","// components/common/Spinner.jsx\nimport React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nconst Spinner = () => (\n  <div className=\"flex justify-center items-center\">\n    <CircularProgress className=\"text-gray-900 dark:text-white\" size={24} />\n  </div>\n);\n\nexport default Spinner;","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { motion } from \"framer-motion\";\nimport emailjs from \"emailjs-com\";\nimport ContactInput from \"./ContactInput\";\nimport Spinner from \"../common/Spinner\";\n\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\n\nconst ContactForm = () => {\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\" });\n  const [formErrors, setFormErrors] = useState({ name: \"\", email: \"\", message: \"\" });\n  const [formStatus, setFormStatus] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const validateField = (name, value) => {\n    switch (name) {\n      case \"name\":\n        return value.trim() === \"\" ? \"Name is required.\" : \"\";\n      case \"email\":\n        return /\\S+@\\S+\\.\\S+/.test(value) ? \"\" : \"Please enter a valid email address.\";\n      case \"message\":\n        return value.trim() === \"\" ? \"Message is required.\" : \"\";\n      default:\n        return \"\";\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData((prev) => ({ ...prev, [name]: value }));\n    setFormErrors((prev) => ({ ...prev, [name]: validateField(name, value) }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const errors = {\n      name: validateField(\"name\", formData.name),\n      email: validateField(\"email\", formData.email),\n      message: validateField(\"message\", formData.message),\n    };\n\n    setFormErrors(errors);\n\n    if (Object.values(errors).some((err) => err !== \"\")) {\n      setFormStatus(\"Please fix the errors above.\");\n      return;\n    }\n\n    setIsLoading(true);\n    setFormStatus(\"Sending...\");\n\n    emailjs\n      .send(\n        process.env.REACT_APP_EMAILJS_SERVICE_ID,\n        process.env.REACT_APP_EMAILJS_TEMPLATE_ID,\n        formData,\n        process.env.REACT_APP_EMAILJS_USER_ID\n      )\n      .then(() => {\n        setFormStatus(\"Email sent successfully!\");\n        setFormData({ name: \"\", email: \"\", message: \"\" });\n        setFormErrors({ name: \"\", email: \"\", message: \"\" });\n      })\n      .catch((error) => {\n        console.error(\"FAILED:\", error);\n        setFormStatus(\"Failed to send email.\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"max-w-lg mx-auto bg-white dark:bg-gray-800 p-8 rounded-lg shadow-md\"\n    >\n      <form onSubmit={handleSubmit}>\n        <Box mb={2}>\n          <ContactInput\n            label=\"Name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleInputChange}\n            placeholder=\"Your Name\"\n            error={formErrors.name}\n            helperText={formErrors.name}\n            icon={<PersonIcon className=\"text-gray-600 dark:text-gray-300\" />}\n          />\n        </Box>\n\n        <Box mb={2}>\n          <ContactInput\n            label=\"Email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleInputChange}\n            placeholder=\"Your Email\"\n            error={formErrors.email}\n            helperText={formErrors.email}\n            icon={<MailIcon className=\"text-gray-600 dark:text-gray-300\" />}\n          />\n        </Box>\n\n        <Box mb={2}>\n          <ContactInput\n            label=\"Message\"\n            name=\"message\"\n            value={formData.message}\n            onChange={handleInputChange}\n            placeholder=\"Your Message\"\n            error={formErrors.message}\n            helperText={formErrors.message}\n            icon={<ChatIcon className=\"text-gray-600 dark:text-gray-300\" />}\n            multiline\n            rows={4}\n          />\n        </Box>\n\n        {formStatus && (\n          <motion.p\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5 }}\n            className={`text-center mt-4 ${\n              formStatus.includes(\"success\") ? \"text-green-600\" : \"text-red-600\"\n            }`}\n          >\n            {formStatus}\n          </motion.p>\n        )}\n\n        <div className=\"flex justify-center mt-6\">\n          <motion.button\n            type=\"submit\"\n            className=\"px-6 py-3 bg-primary text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-primary transition\"\n            disabled={isLoading}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5 }}\n          >\n            {isLoading ? <Spinner /> : \"Send Message\"}\n          </motion.button>\n        </div>\n      </form>\n    </motion.div>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport ContactForm from \"./ContactForm\";\nimport SectionHeader from \"../common/SectionHeader\";\n\nconst Contact = () => {\n  return (\n    <section\n      id=\"contact\"\n      className=\"py-20 bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 w-full\"\n    >\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <SectionHeader\n            title=\"Get In Touch\"\n            subtitle={\n              <>\n                Have a question or want to work together? <br />\n                Drop me a message below!\n              </>\n            }\n          />\n        </motion.div>\n        <br />\n        <ContactForm />\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n"],"names":["SectionHeader","_ref","title","subtitle","className","_jsxs","concat","children","_jsx","label","name","value","onChange","placeholder","error","helperText","icon","multiline","rows","TextField","fullWidth","variant","required","InputProps","startAdornment","InputAdornment","position","style","alignSelf","marginTop","color","InputLabelProps","Spinner","CircularProgress","size","ContactForm","formData","setFormData","useState","email","message","formErrors","setFormErrors","formStatus","setFormStatus","isLoading","setIsLoading","validateField","trim","test","handleInputChange","e","target","prev","_objectSpread","motion","div","initial","opacity","y","whileInView","transition","duration","onSubmit","async","preventDefault","errors","Object","values","some","err","emailjs","process","then","catch","console","finally","Box","mb","ContactInput","PersonIcon","MailIcon","ChatIcon","p","animate","includes","button","type","disabled","Contact","id","_Fragment"],"sourceRoot":""}