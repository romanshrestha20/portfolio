{"version":3,"file":"static/js/667.9c6b75db.chunk.js","mappings":"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","sources":["components/Contact.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport ChatIcon from \"@mui/icons-material/Chat\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// Spinner component\r\nconst Spinner = () => (\r\n  <div className=\"flex justify-center items-center\">\r\n    <CircularProgress className=\"text-gray-900 dark:text-white\" size={24} />\r\n  </div>\r\n);\r\n\r\nconst Contact = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [formErrors, setFormErrors] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [formStatus, setFormStatus] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const validateField = (name, value) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return value.trim() === \"\" ? \"Name is required.\" : \"\";\r\n      case \"email\":\r\n        return /\\S+@\\S+\\.\\S+/.test(value)\r\n          ? \"\"\r\n          : \"Please enter a valid email address.\";\r\n      case \"message\":\r\n        return value.trim() === \"\" ? \"Message is required.\" : \"\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  // Handle input changes with validation\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n\r\n    setFormErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [name]: validateField(name, value),\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email, message } = formData;\r\n\r\n    const errors = {\r\n      name: validateField(\"name\", name),\r\n      email: validateField(\"email\", email),\r\n      message: validateField(\"message\", message),\r\n    };\r\n\r\n    setFormErrors(errors);\r\n\r\n    // Check for errors\r\n    if (Object.values(errors).some((error) => error !== \"\")) {\r\n      setFormStatus(\"Please fix the errors above.\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setFormStatus(\"Sending...\");\r\n\r\n    emailjs\r\n      .send(\r\n        process.env.REACT_APP_EMAILJS_SERVICE_ID,\r\n        process.env.REACT_APP_EMAILJS_TEMPLATE_ID,\r\n        { name, email, message },\r\n        process.env.REACT_APP_EMAILJS_USER_ID\r\n      )\r\n      .then(\r\n        () => {\r\n          setFormStatus(\"Email sent successfully!\");\r\n          setFormData({ name: \"\", email: \"\", message: \"\" });\r\n          setFormErrors({ name: \"\", email: \"\", message: \"\" });\r\n        },\r\n        (error) => {\r\n          console.error(\"FAILED:\", error);\r\n          setFormStatus(\"Failed to send email.\");\r\n        }\r\n      )\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section\r\n      id=\"contact\"\r\n      className=\"py-20 bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 w-full\"\r\n    >\r\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Heading Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          whileInView={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n          className=\"text-center mb-12\"\r\n        >\r\n          <h2 className=\"text-4xl font-extrabold text-primary dark:text-blue-500 mb-4 font-poppins\">\r\n          Contact Me\r\n          </h2>\r\n          <p className=\"font-mono text-lg text-gray-600 dark:text-gray-300\">\r\n            I'd love to hear from you! Fill out the form below.\r\n          </p>\r\n        </motion.div>\r\n\r\n        {/* Form Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          whileInView={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n          className=\"max-w-lg mx-auto bg-white dark:bg-gray-800 p-8 rounded-lg shadow-md\"\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Name Field */}\r\n            <Box mb={2}>\r\n              <TextField\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Your Name\"\r\n                required\r\n                error={!!formErrors.name}\r\n                helperText={formErrors.name}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <PersonIcon className=\"text-gray-600 dark:text-gray-300\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                  style: { color: \"inherit\" },\r\n                }}\r\n                InputLabelProps={{\r\n                  className: \"text-gray-900 dark:text-white\",\r\n                }}\r\n              />\r\n            </Box>\r\n\r\n            {/* Email Field */}\r\n            <Box mb={2}>\r\n              <TextField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Your Email\"\r\n                required\r\n                error={!!formErrors.email}\r\n                helperText={formErrors.email}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <MailIcon className=\"text-gray-600 dark:text-gray-300\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                  style: { color: \"inherit\" },\r\n                }}\r\n                InputLabelProps={{\r\n                  className: \"text-gray-900 dark:text-white\",\r\n                }}\r\n              />\r\n            </Box>\r\n\r\n            {/* Message Field */}\r\n            <Box mb={2}>\r\n              <TextField\r\n                label=\"Message\"\r\n                name=\"message\"\r\n                value={formData.message}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Your Message\"\r\n                multiline\r\n                rows={4}\r\n                required\r\n                error={!!formErrors.message}\r\n                helperText={formErrors.message}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment\r\n                      position=\"start\"\r\n                      style={{ alignSelf: \"flex-start\", marginTop: \"2px\" }}\r\n                    >\r\n                      <ChatIcon className=\"text-gray-600 dark:text-gray-300\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                  style: { color: \"inherit\" },\r\n                }}\r\n                InputLabelProps={{\r\n                  className: \"text-gray-900 dark:text-white\",\r\n                }}\r\n              />\r\n            </Box>\r\n\r\n            {/* Form Status */}\r\n            {formStatus && (\r\n              <motion.p\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                transition={{ duration: 0.5 }}\r\n                className={`text-center mt-4 ${\r\n                  formStatus.includes(\"success\")\r\n                    ? \"text-green-600\"\r\n                    : \"text-red-600\"\r\n                }`}\r\n              >\r\n                {formStatus}\r\n              </motion.p>\r\n            )}\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"flex justify-center mt-6\">\r\n              <motion.button\r\n                type=\"submit\"\r\n                className=\"px-6 py-3 bg-primary text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-primary transition\"\r\n                disabled={isLoading}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                transition={{ duration: 0.5 }}\r\n              >\r\n                {isLoading ? <Spinner /> : \"Send Message\"}\r\n              </motion.button>\r\n            </div>\r\n          </form>\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["Spinner","_jsx","className","children","CircularProgress","size","Contact","formData","setFormData","useState","name","email","message","formErrors","setFormErrors","formStatus","setFormStatus","isLoading","setIsLoading","validateField","value","trim","test","handleInputChange","e","target","prevData","_objectSpread","prevErrors","id","_jsxs","motion","div","initial","opacity","y","whileInView","transition","duration","onSubmit","async","preventDefault","errors","Object","values","some","error","emailjs","process","then","console","finally","Box","mb","TextField","label","onChange","fullWidth","variant","placeholder","required","helperText","InputProps","startAdornment","InputAdornment","position","PersonIcon","style","color","InputLabelProps","MailIcon","multiline","rows","alignSelf","marginTop","ChatIcon","p","animate","concat","includes","button","type","disabled"],"sourceRoot":""}